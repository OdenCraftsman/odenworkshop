module.exports = {
    env: {
      browser: true,
      es2021: true,
    },
    extends: [
      'eslint:recommended',
      'plugin:react/recommended',
      'plugin:@typescript-eslint/recommended',
      'plugin:storybook/recommended',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
      ecmaFeatures: {
        jsx: true,
      },
      ecmaVersion: 12,
      sourceType: 'module',
      project: './tsconfig.json',
    },
    plugins: ['react', '@typescript-eslint', 'functional', 'import'],
    settings: {
      react: {
        version: 'detect',
      },
    },
    rules: {
      // General
      'no-console': ['off', { allow: ['debug', 'warn', 'error'] }],
      // TypeScript
      '@typescript-eslint/consistent-type-imports': 'off',
      '@typescript-eslint/explicit-function-return-type': 'off',
      '@typescript-eslint/explicit-member-accessibility': 'off',
      '@typescript-eslint/indent': 'off',
      '@typescript-eslint/member-delimiter-style': 'off',
      '@typescript-eslint/no-confusing-void-expression': [
        'off',
        {
          ignoreArrowShorthand: true,
          ignoreVoidOperator: true,
        },
      ],
      'no-duplicate-imports': 'off',
      '@typescript-eslint/no-duplicate-imports': 'off',
      '@typescript-eslint/no-implicit-any-catch': 'off',
      'no-invalid-this': 'off',
      '@typescript-eslint/no-invalid-this': 'off',
      '@typescript-eslint/no-invalid-void-type': 'off',
      'no-loop-func': 'off',
      '@typescript-eslint/no-loop-func': 'off',
      'no-loss-of-precision': 'off',
      '@typescript-eslint/no-loss-of-precision': 'off',
      '@typescript-eslint/no-parameter-properties': 'off',
      'no-redeclare': 'off',
      '@typescript-eslint/no-redeclare': 'off',
      'no-shadow': 'off',
      '@typescript-eslint/no-shadow': 'off',
      'no-throw-literal': 'off',
      '@typescript-eslint/no-throw-literal': 'off',
      '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'off',
      '@typescript-eslint/no-unnecessary-condition': 'off',
      '@typescript-eslint/no-unnecessary-type-arguments': 'off',
      'no-unused-expressions': 'off',
      '@typescript-eslint/no-unused-expressions': 'off',
      '@typescript-eslint/no-unused-vars': 'off',
      '@typescript-eslint/no-use-before-define': [
        'off',
        {
          variables: false,
        },
      ],
      '@typescript-eslint/prefer-enum-initializers': 'off',
      '@typescript-eslint/prefer-for-of': 'off',
      '@typescript-eslint/prefer-includes': 'off',
      '@typescript-eslint/prefer-nullish-coalescing': 'off',
      '@typescript-eslint/prefer-optional-chain': 'off',
      '@typescript-eslint/prefer-reduce-type-parameter': 'off',
      '@typescript-eslint/prefer-string-starts-ends-with': 'off',
      '@typescript-eslint/prefer-ts-expect-error': 'off',
      '@typescript-eslint/promise-function-async': 'off',
      'no-return-await': 'off',
      '@typescript-eslint/return-await': 'off',
      '@typescript-eslint/strict-boolean-expressions': 'off',
      '@typescript-eslint/switch-exhaustiveness-check': 'off',
      // React
      'react/jsx-boolean-value': 'off',
      'react/jsx-curly-brace-presence': 'off',
      'react/jsx-fragments': 'off',
      'react/jsx-no-useless-fragment': 'off',
      'react/jsx-uses-react': 'off',
      'react/prefer-stateless-function': 'off',
      'react/prop-types': 'off',
      'react/react-in-jsx-scope': 'off',
      // Functional
      'functional/prefer-readonly-type': [
        'off',
        {
          allowLocalMutation: true,
          allowMutableReturnType: true,
          ignoreClass: true,
        },
      ],
      'import/order': [
        'off',
        {
          groups: ['builtin', 'external', 'internal'],
          pathGroups: [
            {
              pattern: '{react,react-dom/**}',
              group: 'external',
              position: 'before',
            },
          ],
          pathGroupsExcludedImportTypes: ['react'],
          'newlines-between': 'always',
          alphabetize: {
            order: 'asc',
            caseInsensitive: true,
          },
        },
      ],
      'react/react-in-jsx-scope': 'off',
      'linebreak-style': ['off', 'unix'],
      eqeqeq: ['off', 'always', { null: 'ignore' }],
      camelcase: ['off', { properties: 'never' }],
      quotes: ['off', 'single', { avoidEscape: true }],
    },
  };